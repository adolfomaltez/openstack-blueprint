# Instalar kayobe en controller0 en sandbox multinode (vagrant) + ceph en baremetal
# https://docs.openstack.org/kayobe/latest/configuration/scenarios/all-in-one/overcloud.html

# OpenStack: baremetal 0-8
# Ceph: baremetal 9-20


# Instalacion de KVM con "nested virtualization"

# Inicializar sandbox (usando KVM)
cd sandbox
vagrant up --provider=libvirt

# Conectarse a control0
vagrant ssh control0


# Instalar dependencias
sudo su
cd
dnf install -y python3-devel python3-virtualenv gcc libffi-devel nano git net-tools


## Crear prticion
cfdisk /dev/vdb 
## (gpt, new, 120GB, write, yes, quit)
mkfs.ext4 /dev/vdb1 
mkdir /mnt/vdb1
mount /dev/vdb1 /mnt/vdb1

# Mover y hacer enlances simbolicos (por espacio)

mkdir /mnt/vdb1/kayobe
mkdir /mnt/vdb1/libvirt

ln -s /mnt/vdb1/kayobe /root/kayobe
ln -s /mnt/vdb1/libvirt /var/lib/libvirt



# Configurar el bridge manualmente
ip a del 192.168.33.10/24 dev eth1
ip l add breth1 type bridge
ip l set breth1 up
ip a add 192.168.33.3/24 dev breth1
#ip l add eth1 type dummy
ip l set eth1 up
ip l set eth1 master breth1


# Editar /etc/hosts
192.168.33.3  control0
192.168.33.11 seed0
192.168.33.12 baremetal0
192.168.33.13 baremetal1
192.168.33.14 baremetal2
192.168.33.15 baremetal3
192.168.33.16 baremetal4
192.168.33.17 baremetal5
192.168.33.18 baremetal6
192.168.33.19 baremetal7
192.168.33.20 baremetal8
192.168.33.21 baremetal9
192.168.33.22 baremetal10
192.168.33.23 baremetal11
192.168.33.24 baremetal12
192.168.33.25 baremetal13
192.168.33.26 baremetal14
192.168.33.27 baremetal15
192.168.33.28 baremetal16
192.168.33.29 baremetal17
192.168.33.30 baremetal18
192.168.33.31 baremetal19
192.168.33.32 baremetal20




# Ceph
# https://docs.ceph.com/projects/ceph-ansible/en/stable-6.0/
# Clonar repositorio Ceph (pacific)
git clone https://github.com/ceph/ceph-ansible.git -b stable-6.0

# Configurar  ceph (container deployment)
cd
cd ceph-ansible
cp site-container.yml.sample site-container.yml

# Configurar variables de ceph

cd group_vars/
cp all.yml.sample all.yml

nano all.yml

ceph_origin: repository
ceph_repository: community

monitor_interface: eth1  
public_network: 192.168.33.0/24
radosgw_interface: eth1  

containerized_deployment: true 

dashboard_admin_user: admin
dashboard_admin_password: p@ssw0rd

grafana_admin_user: admin
grafana_admin_password: p@ssw0rd


cp -rp osds.yml.sample osds.yml

devices:
  - /dev/sda
  - /dev/sdb
  - /dev/sdc


# Crear virtualenv kayobe
cd /root/kayobe/
mkdir -p src venvs
virtualenv /root/kayobe/venvs/kayobe
source /root/kayobe/venvs/kayobe/bin/activate

# Instalar kayobe
pip install -U pip
pip install kayobe
deactivate

virtualenv /root/kayobe/venvs/kayobe
source /root/kayobe/venvs/kayobe/bin/activate


# Aprovisionamiento de ceph
cd /root/ceph-ansible
pip install -r requirements.txt 





# Clonar repositorio kayobe-config
cd /root/kayobe/src
git clone https://opendev.org/openstack/kayobe-config -b stable/victoria

cd kayobe-config
cp etc/kayobe/inventory/hosts.example etc/kayobe/inventory/hosts
git rm etc/kayobe/inventory/hosts.example

# Iniciar y provisionar infraestructura (Vagrant + Ansible)

#cd
#cd ceph-ansible
#vagrant up --provider=libvirt





#  Editar (configurar) ficheros kayobe
nano etc/kayobe/inventory/hosts
nano etc/kayobe/inventory/group_vars/controllers/network-interfaces
nano etc/kayobe/inventory/group_vars/compute/network-interfaces
nano etc/kayobe/inventory/group_vars/seed/network-interfaces
nano etc/kayobe/networks.yml
nano etc/kayobe/network-allocation.yml

# Editar (configurar) ficheros kolla
nano etc/kayobe/kolla/globals.yml


# Hacer bootstrap de control host
cd /root/kayobe/src/kayobe-config
source kayobe-env

kayobe control host bootstrap


## Poner key RSA en seed0 y baremetal 0 - 20 (control0# cat /root/.ssh/id_rsa.pub)

vagrant ssh seed0
sudo su
mkdir /root/.ssh
echo "ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABgQC3H02Hr23K+dEzyJSOcxJvH4sU3tOsVfKMDkJDRqn0VT7/bL6kfAOHRGKQAVgd/+r8NeXqtdVJKLxPl7Tubyp+cOA/bg59oTGAVwdGDLKpjYA3C1av6WT4DKA/q+ZjjIJEsLwsFMZlDfVPx9kODhsBE25foiAp9gfOhblEUDe+Po88E/u2FnaK547veCCGs0Jv6/wkHMGvgfbFtOc725v0dP3LiynXgGoAcCvlepXYzrXDhQLJJ5ssL+1qF36uYpaz5YnGj5Ey5O0EqTYFmOZCHW1WzgZS07fCiEgkbOs9wK7p9grQJSzoekmwJAyQ/ZGQVLIqlLbBWdr8ULRSVjcTujfuKLy63hJKk2+mTCJKOrLrCe8G1ikHp1a5vvFBYKqMZ5/BLB8EWNYsCvrW2oW+QKX3mIie5mq36/ACAZHtFS02VUR8mavoUtST/g5M11UubyIxY83+uqdcXnwoiFFrAgU6Da1zASFQ2GYCSBcWoV73iVNFil8DZhoaHIJGwPU= root@control0" > /root/.ssh/authorized_keys
exit
exit
#dnf -y install nano
#nano /etc/hosts






# Instalar ceph

cd /root/ceph-ansible/
nano hosts


ansible-playbook -i hosts site-container.yml




# Tunnel SSH a la Interface Web de CEPH (prodesk -> blade018 -> mgr0)
ssh -L 10.168.10.39:443:192.168.33.31:8443 administrador@10.10.20.187


## Configurar volumenes para OpenStack
# https://docs.ceph.com/en/latest/rbd/rbd-openstack/

ssh baremetal11
# baremetal11 es mon0 en hosts
#docker exec -it ceph-mon-mon0 /bin/bash
#sudo su

#podman container list

podman exec -it ceph-mon-baremetal11 sh

# Verificar estado del cluster
ceph -s


# Crear volumenes
ceph osd pool create volumes
ceph osd pool create images
ceph osd pool create backups
ceph osd pool create vms

# Initializate pools
rbd pool init volumes
rbd pool init images
rbd pool init backups
rbd pool init vms


exit


## https://docs.openstack.org/kayobe/victoria/deployment.html#seed

# Cambiar hostname 127.0.0.1 en baremetal 0 - 2
dnf -y install nano
nano  /etc/hosts

# Deploy SEED

cd /root/kayobe/src/kayobe-config
source kayobe-env


kayobe seed host configure
kayobe seed container image build
kayobe seed service deploy



## Deploy overcloud
kayobe overcloud host configure
kayobe overcloud container image build
kayobe overcloud container image pull


# Comentar /etc/hosts de los controllers
kayobe overcloud service deploy



## Comentar las 2 lineas de localhost
## 127.0.0.1 localhost en /etc/resolv.conf


# Resolver misconfiguration de docker
#iptables -P FORWARD ACCEPT


# ejecutar init-runonce para probar que funciona bien

pip install python-openstackclient
export EXT_NET_CIDR=192.168.33.0/24
export EXT_NET_GATEWAY=192.168.33.1
export EXT_NET_RANGE="start=192.168.33.100,end=192.168.33.254"
source "${KOLLA_CONFIG_PATH:-/etc/kolla}/admin-openrc.sh"
${KOLLA_SOURCE_PATH}/tools/init-runonce

# Crear primer servidor virtual
openstack server create --image cirros --flavor m1.tiny --key-name mykey --network demo-net demo1
openstack floating ip create --project admin --subnet public1-subnet public1
openstack server add floating ip demo1 192.168.33.121

#ssh cirros@192.168.33.121



# Hacer el tunnel SSH OpenStack
# Tunnel a la Interface Web Dashboard Openstack Horizon (prodesk -> blade017 -> control0)
ssh -L 10.168.10.39:80:192.168.33.2:80 administrador@10.10.20.187

clave:
grep -nR "keystone_admin_password"


